name: CD - Release - iOS

on:
  push:
    branches:
      - ci

jobs:
  setup-fastlane:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Setup Ruby, JRuby and TruffleRuby
        uses: ruby/setup-ruby@v1.174.0
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          save-always: 'true'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install Node.js dependencies
        run: |
          npm cache clean --force
          npm install

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Making iOS Release Code
        run: |
          echo 'STORYBOOK_FIGMA_ACCESS_TOKEN=${{ secrets.STORYBOOK_FIGMA_ACCESS_TOKEN }}' >> .env
          echo 'VITE_ACCESS_EXPIRE=${{ vars.ACCESS_EXPIRE }}' >> .env
          echo 'VITE_APP_URL=${{ vars.APP_URL }}' >> .env
          echo 'VITE_BASE_URL=${{ vars.BASE_URL }}' >> .env
          echo 'VITE_CLIENT_SECRET_TOKEN_CLIENT_ID=${{ secrets.CLIENT_SECRET_TOKEN_CLIENT_ID }}' >> .env
          echo 'VITE_CLIENT_SECRET_TOKEN_REDIRECT_URL=${{ vars.CLIENT_SECRET_TOKEN_REDIRECT_URL }}' >> .env
          echo 'VITE_DAPP_ENV=${{ vars.DAPP_ENV }}' >> .env
          echo 'VITE_ENV=${{ vars.ENV }}' >> .env
          echo 'VITE_GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}' >> .env
          echo 'VITE_GOOGLE_RECAPTCHA_SITE_KEY=${{ secrets.GOOGLE_RECAPTCHA_SITE_KEY }}' >> .env
          echo 'VITE_JP_STRIPE_PUBLIC_KEY=${{ secrets.JP_STRIPE_PUBLIC_KEY }}' >> .env
          echo 'VITE_LOG_DISCORD_WEBHOOK=${{ secrets.LOG_DISCORD_WEBHOOK }}' >> .env
          echo 'VITE_REFRESH_EXPIRE=${{ vars.REFRESH_EXPIRE }}' >> .env
          echo 'VITE_SOCKET_URL=${{ vars.SOCKET_URL }}' >> .env
          echo 'VITE_STRIPE_PUBLIC_KEY=${{ vars.STRIPE_PUBLIC_KEY }}' >> .env
          npm run make:ios

      - name: Configurating Bundler
        run: |
          gem install bundler
          cp Gemfile ios

      - name: Installing Fastlane with Bundler
        run: |
          cd ios
          bundle update
          bundle install

      - name: Configurating Fastlane
        run: |
          export LC_ALL=en_US.UTF-8
          export LANG=en_US.UTF-8
          cp -R fastlane/ios-config ios
          mv ios/ios-config ios/fastlane
          cd ios
          fastlane match appstore --readonly
          fastlane beta --verbose
        env:
          MATCH_GIT_URL: ${{ vars.FASTLANE_MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.IOS_MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.FASTLANE_SECRETS_GIT_PAT_TOKEN }}
          ASC_KEY_ID: ${{ secrets.IOS_ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.IOS_ASC_ISSUER_ID }}
          ASC_KEY_P8: ${{ secrets.ASC_KEY_P8 }}